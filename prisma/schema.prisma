// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id             String       @id @default(uuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime    @updatedAt
  first_name     String?
  last_name      String?
  phone          String?      @unique
  email          String       @unique
  email_secondary String?     @unique
  hash           String
  hashRt         String?
  resources Resource[]
  resources_access  ResourceUser[]

  @@map("users")

}


model Resource{
  id             String       @id @default(uuid())
  title String  @db.VarChar(255)
  description String? @db.Text
  cover_image String?  @db.VarChar(255)
  intro_video String?
  price Float @default(0.0)
  discount_price Float?
  code String? @unique
  is_published Boolean @default(false)
  author_id String
  author User @relation(fields: [author_id], references: [id])

  users ResourceUser[]

  type Type @default(COURSE_MODULE)


  modules Module[]

  createdAt      DateTime?     @default(now())
  updatedAt      DateTime?    @updatedAt
}


enum Type {
  BOOK
  COURSE
  STUDY_MATERIAL
  COURSE_MODULE
}



model Module{

  id  String       @id @default(uuid())
  title String  @db.VarChar(255)
  content Json? 
  is_lock Boolean @default(false)

  resource_id String
  resource Resource @relation(fields:  [resource_id], references: [id] )


  createdAt      DateTime?     @default(now())
  updatedAt      DateTime?    @updatedAt
  @@map("modules")
}



model ResourceUser{
  user_id String
  resource_id String

  user User @relation(fields: [user_id], references: [id])
  rescource Resource @relation(fields: [resource_id], references: [id])

  status Status @default(PENDDING)
  joining_time DateTime?     @default(now())
  @@id([user_id, resource_id])
}

enum Status {
  PENDDING
  ACCEPTED
  REJECTED
  CANCELED
}